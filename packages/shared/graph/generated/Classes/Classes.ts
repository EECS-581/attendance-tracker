// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EnrolledClass extends ethereum.Event {
  get params(): EnrolledClass__Params {
    return new EnrolledClass__Params(this);
  }
}

export class EnrolledClass__Params {
  _event: EnrolledClass;

  constructor(event: EnrolledClass) {
    this._event = event;
  }

  get className(): string {
    return this._event.parameters[0].value.toString();
  }

  get classId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EnrolledClassSession extends ethereum.Event {
  get params(): EnrolledClassSession__Params {
    return new EnrolledClassSession__Params(this);
  }
}

export class EnrolledClassSession__Params {
  _event: EnrolledClassSession;

  constructor(event: EnrolledClassSession) {
    this._event = event;
  }

  get className(): string {
    return this._event.parameters[0].value.toString();
  }

  get classId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sessionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Classes extends ethereum.SmartContract {
  static bind(address: Address): Classes {
    return new Classes("Classes", address);
  }

  classToId(param0: string): BigInt {
    let result = super.call("classToId", "classToId(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_classToId(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("classToId", "classToId(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  enrollClass(_className: string, _id: BigInt): boolean {
    let result = super.call(
      "enrollClass",
      "enrollClass(string,uint256):(bool)",
      [
        ethereum.Value.fromString(_className),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );

    return result[0].toBoolean();
  }

  try_enrollClass(
    _className: string,
    _id: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "enrollClass",
      "enrollClass(string,uint256):(bool)",
      [
        ethereum.Value.fromString(_className),
        ethereum.Value.fromUnsignedBigInt(_id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  enrollClassSession(_className: string, _sessionId: BigInt): boolean {
    let result = super.call(
      "enrollClassSession",
      "enrollClassSession(string,uint256):(bool)",
      [
        ethereum.Value.fromString(_className),
        ethereum.Value.fromUnsignedBigInt(_sessionId)
      ]
    );

    return result[0].toBoolean();
  }

  try_enrollClassSession(
    _className: string,
    _sessionId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "enrollClassSession",
      "enrollClassSession(string,uint256):(bool)",
      [
        ethereum.Value.fromString(_className),
        ethereum.Value.fromUnsignedBigInt(_sessionId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  takenClassIds(param0: BigInt): boolean {
    let result = super.call("takenClassIds", "takenClassIds(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_takenClassIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "takenClassIds",
      "takenClassIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  takenClassSession(param0: BigInt): boolean {
    let result = super.call(
      "takenClassSession",
      "takenClassSession(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_takenClassSession(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "takenClassSession",
      "takenClassSession(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  validClassSession(param0: BigInt): boolean {
    let result = super.call(
      "validClassSession",
      "validClassSession(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_validClassSession(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "validClassSession",
      "validClassSession(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  validSessionChecker(_sessionId: BigInt): boolean {
    let result = super.call(
      "validSessionChecker",
      "validSessionChecker(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_sessionId)]
    );

    return result[0].toBoolean();
  }

  try_validSessionChecker(_sessionId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "validSessionChecker",
      "validSessionChecker(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_sessionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EnrollClassCall extends ethereum.Call {
  get inputs(): EnrollClassCall__Inputs {
    return new EnrollClassCall__Inputs(this);
  }

  get outputs(): EnrollClassCall__Outputs {
    return new EnrollClassCall__Outputs(this);
  }
}

export class EnrollClassCall__Inputs {
  _call: EnrollClassCall;

  constructor(call: EnrollClassCall) {
    this._call = call;
  }

  get _className(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EnrollClassCall__Outputs {
  _call: EnrollClassCall;

  constructor(call: EnrollClassCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class EnrollClassSessionCall extends ethereum.Call {
  get inputs(): EnrollClassSessionCall__Inputs {
    return new EnrollClassSessionCall__Inputs(this);
  }

  get outputs(): EnrollClassSessionCall__Outputs {
    return new EnrollClassSessionCall__Outputs(this);
  }
}

export class EnrollClassSessionCall__Inputs {
  _call: EnrollClassSessionCall;

  constructor(call: EnrollClassSessionCall) {
    this._call = call;
  }

  get _className(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _sessionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EnrollClassSessionCall__Outputs {
  _call: EnrollClassSessionCall;

  constructor(call: EnrollClassSessionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
