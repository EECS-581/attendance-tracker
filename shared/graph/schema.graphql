type User @entity {
  id: ID!
  address: Bytes!
  balance: BigInt!
  organizationBalances: [OrganizationBalance!]! @derivedFrom(field: "user")
  timestamp: BigInt!
  authId: String!
  userType: String!
}
type OrganizationBalance @entity {
  id: ID!
  user: User! @relation(name: "UserOrganizationBalances")
  organization: Organization! @relation(name: "OrganizationBalances")
  balance: BigInt!         
}

type MintEvent @entity {
  id: ID!
  recipient: User! @relation(name: "UserMintEvents")
  amount: BigInt!
  time: Int!
  classSession: Session! @relation(name: "SessionMintEvents")
  organization: Organization! @relation(name: "OrganizationMintEvents")
}

type Token @entity {
  id: ID!
  totalMinted: BigInt!
}

type ClassEntity @entity {
  id: ID!
  name: String!
  classId: BigInt!
  timestamp: Int!
  teacher: User! @relation(name: "UserClassEntities")
  sessions: [Session!]! @derivedFrom(field: "classEntity")
}

type Session @entity {
  id: ID!
  classEntity: ClassEntity! @relation(name: "ClassEntitySessions")
  sessionId: BigInt!
  timestamp: Int!
  teacher: User! @relation(name: "UserSessions")
  attendanceCount: Int! @default(value: "0") 
}


type Organization @entity{
  id: ID!
  name: String!
  organizationId: BigInt!
  timestamp: Int!
}

type Attendance @entity {
  id: ID!
  user: User! @relation(name: "UserAttendances")
  session: Session! @relation(name: "SessionAttendances")
  timestamp: BigInt!
}
