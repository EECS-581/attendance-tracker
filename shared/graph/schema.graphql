type User @entity {
  id: ID!
  address: Bytes!
  balance: BigInt!
  organizationBalances: [OrganizationBalance!]! @derivedFrom(field: "user")
  timestamp: BigInt!
  authId: String!
  userType: String!
}

type OrganizationBalance @entity {
  id: ID!
  user: User!
  organizationId: Bytes!   
  balance: BigInt!         
}

type MintEvent @entity {
  id: ID!
  to: Bytes!
  amount: BigInt!
  time: Int!
  classSessionID: BigInt!
}

type Token @entity {
  id: ID!
  totalMinted: BigInt!
}

type Class @entity {
  id: ID!
  name: String!
  classId: BigInt!
  timestamp: Int!
  teacher: Bytes!
}

type ClassSession @entity {
  id: ID!
  className: String!
  classId: BigInt!
  sessionId: BigInt!
  timestamp: Int!
  teacher: Bytes!
}

type Organization @entity{
  id : ID!
  name : String!
  organizationId : BigInt!
  timestamp : Int!
}
